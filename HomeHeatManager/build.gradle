plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.4.0"
    id 'java'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'de.undercouch.download' version '5.2.0'
}

def springbootVersion = '2.7.17'
def springSecurityVersion = '5.8.8'
def auth0Version = '3.18.3'
def systemdVersion = '1.1.0'
def springdocVersion = '1.7.0'

group = 'com.sasieczno.homeheat'
version = "${rootProject.version}"
description = 'manager'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}


dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${springbootVersion}"
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
    implementation "com.auth0:java-jwt:${auth0Version}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation("com.github.thjomnx:java-systemd:${systemdVersion}") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation 'org.projectlombok:lombok'
    implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

project.gradle.taskGraph.whenReady {
    println(project.gradle.taskGraph.allTasks)
}

task angularNpmInstall(type: Exec) {
    workingDir "$projectDir/frontend"
    commandLine 'npm', 'install'
}

task angularBuild(type: Exec) {
    dependsOn "angularNpmInstall"
    workingDir "$projectDir/frontend"
    commandLine 'node_modules/@angular/cli/bin/ng.js', 'build', '--configuration', 'production'
}

task angularClean(type: Exec) {
    workingDir "$projectDir/frontend"
    commandLine 'rm', '-rf', 'dist'
}

task downloadBootstrap(type: Download) {
    src 'https://github.com/twbs/bootstrap/releases/download/v5.1.3/bootstrap-5.1.3-dist.zip'
    dest new File(buildDir, 'bootstrap-5.1.3-dist.zip')
    overwrite false
}

task unzipBootstrap(dependsOn: [downloadBootstrap, angularBuild], type: Copy) {
    from zipTree(downloadBootstrap.dest)
    into "$projectDir/frontend/dist/home-heat-client"
}

bootJar {
    dependsOn(tasks.unzipBootstrap)
    into('static') {
        from ('frontend/dist/home-heat-client')
    }
}

test {
    useJUnitPlatform()
}


tasks.clean.dependsOn(tasks.angularClean)
